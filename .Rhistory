# libraries and set up
library(tidyverse)
library(ggdark)
library(lubridate)
library(scales)
library(DT)
wildfires<-readr::read_csv("https://raw.githubusercontent.com/BuzzFeedNews/2018-07-wildfire-trends/master/data/calfire_frap.csv") %>% mutate(plot_date = as.Date(format(alarm_date,"2017-%m-%d")))
# making a table
datatable(data = wildfires, filter = "top", options = list(pageLength = 10, autoWidth = TRUE)) %>%
formatRound('gis_acres', 2) %>% formatRound('shape_area', 2) %>% formatRound('shape_length', 2) %>%
formatStyle('objectid', color = 'black', backgroundColor = 'orange') %>%
formatStyle('year_', color = 'black', backgroundColor = 'orange') %>%
formatStyle('state', color = 'black', backgroundColor = 'orange') %>%
formatStyle('agency', color = 'black', backgroundColor = 'orange') %>%
formatStyle('unit_id', color = 'black', backgroundColor = 'orange') %>%
formatStyle('fire_name', color = 'black', backgroundColor = 'orange') %>%
formatStyle('inc_num', color = 'black', backgroundColor = 'orange') %>%
formatStyle('alarm_date', color = 'black', backgroundColor = 'orange') %>%
formatStyle('cont_date', color = 'black', backgroundColor = 'orange') %>%
formatStyle('cause', color = 'black', backgroundColor = 'orange') %>%
formatStyle('comments', color = 'black', backgroundColor = 'orange') %>%
formatStyle('report_ac', color = 'black', backgroundColor = 'orange') %>%
formatStyle('gis_acres', color = 'black', backgroundColor = 'orange') %>%
formatStyle('c_method', color = 'black', backgroundColor = 'orange') %>%
formatStyle('objective', color = 'black', backgroundColor = 'orange') %>%
formatStyle('fire_num', color = 'black', backgroundColor = 'orange') %>%
formatStyle('shape_length', color = 'black', backgroundColor = 'orange') %>%
formatStyle('shape_area', color = 'black', backgroundColor = 'orange') %>%
formatStyle('plot_date', color = 'black', backgroundColor = 'orange')
# graphic
ggplot(wildfires, aes(x=plot_date, y=year_, size=shape_area))+
geom_point(alpha=0.4, color="orange")+
scale_y_reverse(n.breaks=4, labels=c("1950","1970","1990","2010"))+
ggtitle("Big fires have gotten more common.")+
theme(plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill="black"),
panel.grid=element_blank(),
panel.grid.major.y = element_line(color="grey"),
panel.grid.minor.y=element_line(color="grey"),
axis.title=element_blank(),
axis.text=element_text(color="lightgrey", face="bold"),
legend.position = "none",
title=element_text(color="lightgrey"))+
scale_x_date(date_breaks="1 month",
date_labels=c("Dec","Jan","Feb","Mar", "Apr","May", "Jun","Jul",
"Aug","Sep","Oct","Nov"))+
scale_size(range=c(0.1,9))
library(flextable)
pinot <- read_rds("C:\\data\\pinot.rds")
head(pinot)
pinot %>% select(-description)
library(flexpivot)
install.packages("flexpivot")
library(flexpivot)
remotes::install_github("dreamRs/flexpivot")
library(flexpivot)
head(pivot)
head(pinot)
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format()
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format()
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
flextable(world_phones)
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format()
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
flextable(pinot)
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format() %>%
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
flextable(pinot)
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format() %>%
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format()
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
# pinot %>% select(-description) %>%
#pivot_table("province", "year") %>%
#pivot_format()
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
flextable(pinot, select(-description))
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
# pinot %>% select(-description) %>%
#pivot_table("province", "year") %>%
#pivot_format()
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
pinot %>% select(-description) %>% flextable()
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
# pinot %>% select(-description) %>%
#pivot_table("province", "year") %>%
#pivot_format()
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
pinot %>% select(-description) %>% as_flextable()
library(flextable)
library(flexpivot)
pinot <- read_rds("C:\\data\\pinot.rds")
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format()
pinot %>% select(-description) %>%
pivot_table("province", "year") %>%
pivot_format()
library(ggrepel)
library(tidyverse) # call the tidyverse for %>% and ggplot
library(ggthemes) # Use the economist theme
install.packages(c("ggthemes", "ggrepel"))
library(ggrepel)
library(tidyverse) # call the tidyverse for %>% and ggplot
library(ggthemes) # Use the economist theme
library(ggiraph)
install.packages("ggiraph")
library(ggrepel)
library(tidyverse) # call the tidyverse for %>% and ggplot
library(ggthemes) # Use the economist theme
library(ggiraph)
library(DT)
corbyn <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-16/corbyn.csv")
datatable(corbyn)
p1.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), data_id=political_group, y=avg_facebook_likes, label=avg_facebook_likes, tooltip = paste0(political_group,"<br>",avg_facebook_likes, sep=""))) +
geom_bar_interactive(stat="identity", fill="#DC241f") +
geom_label(fill="#DC241f", color="#FFFFFF", size=3.5) +
labs(x="Associate of the Labour Party", y="Average Facebook Likes") +
hrbrthemes::theme_ipsum_rc() +
coord_flip()
install.packages("hrbrthemes")
p1.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), data_id=political_group, y=avg_facebook_likes, label=avg_facebook_likes, tooltip = paste0(political_group,"<br>",avg_facebook_likes, sep=""))) +
geom_bar_interactive(stat="identity", fill="#DC241f") +
geom_label(fill="#DC241f", color="#FFFFFF", size=3.5) +
labs(x="Associate of the Labour Party", y="Average Facebook Likes") +
hrbrthemes::theme_ipsum_rc() +
coord_flip()
p2.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), y=avg_facebook_likes, label=avg_facebook_likes, data_id=political_group, tooltip = paste0(political_group,"<br>",avg_facebook_likes, sep=""))) +
geom_segment_interactive(aes(yend=0, xend=political_group), size=2, color="#DC241f") +
geom_point(size=10, color="#DC241f", alpha=0.8) +
geom_text(color="#FFFFFF", size=3.5, fontface=2) +
labs(x="Associate of the Labour Party", y="Average Facebook Likes") +
hrbrthemes::theme_ipsum_rc() +
coord_flip()
library(patchwork)
GIp1 <- p1.Int / p2.Int
girafe(ggobj=GIp1)
p1.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), data_id=political_group, y=avg_facebook_likes, label=avg_facebook_likes, tooltip = paste0(political_group,"<br>",avg_facebook_likes, sep=""))) +
geom_bar_interactive(stat="identity", fill="#DC241f") +
geom_label_interactive(fill="#DC241f", color="#FFFFFF", size=3.5) +
labs(x="Associate of the Labour Party", y="Average Facebook Likes") +
hrbrthemes::theme_ipsum_rc() +
coord_flip()
p2.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), y=avg_facebook_likes, label=avg_facebook_likes, data_id=political_group, tooltip = paste0(political_group,"<br>",avg_facebook_likes, sep=""))) +
geom_segment_interactive(aes(yend=0, xend=political_group), size=2, color="#DC241f") +
geom_point(size=10, color="#DC241f", alpha=0.8) +
geom_text(color="#FFFFFF", size=3.5, fontface=2) +
labs(x="Associate of the Labour Party", y="Average Facebook Likes") +
hrbrthemes::theme_ipsum_rc() +
coord_flip()
library(patchwork)
GIp1 <- p1.Int / p2.Int
girafe(ggobj=GIp1)
p1.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), data_id=political_group, y=avg_facebook_likes, label=avg_facebook_likes, tooltip = paste0(political_group,"<br>",avg_facebook_likes, sep=""))) +
geom_bar_interactive(stat="identity", fill="#DC241f") +
geom_label(fill="#DC241f", color="#FFFFFF", size=3.5) +
labs(x="Associate of the Labour Party", y="Average Facebook Likes") +
hrbrthemes::theme_ipsum_rc() +
coord_flip()
p2.Int <- ggplot(corbyn, aes(x=reorder(political_group,avg_facebook_likes), y=avg_facebook_likes, label=avg_facebook_likes, data_id=political_group, tooltip = paste0(political_group,"<br>",avg_facebook_likes, sep=""))) +
geom_segment_interactive(aes(yend=0, xend=political_group), size=2, color="#DC241f") +
geom_point(size=10, color="#DC241f", alpha=0.8) +
geom_text(color="#FFFFFF", size=3.5, fontface=2) +
labs(x="Associate of the Labour Party", y="Average Facebook Likes") +
hrbrthemes::theme_ipsum_rc() +
coord_flip()
library(patchwork)
GIp1 <- p1.Int / p2.Int
girafe(ggobj=GIp1)
library(plotly)
library(magrittr)
library(tidyquant)
install.packages(c("plotly", "magrittr", "tidyquant"))
library(plotly)
library(magrittr)
library(tidyquant)
INTC <- tq_get("INTC")
INTC <- tail(INTC, 90)
INTC$ID <- seq.int(nrow(INTC))
INTC %<>%
mutate(close = round(close, digits = 2))
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
INTC <- INTC %>%
accumulate_by(~ID)
fig <- INTC %>%
plot_ly(x = ~ID, y = ~close, frame = ~frame, type = "scatter", mode = "lines",
fill = "tozeroy", fillcolor = "rgba(73, 26, 201, 0.5)", line = list(color = "rgb(73, 26, 201)"),
text = ~paste("Date: ", date, "<br>Close: $", close), hoverinfo = "text")
fig <- fig %>%
layout(title = "Intel Stock Closing Price: Last 90 Days", yaxis = list(title = "Close",
range = c(0, 50), zeroline = F, tickprefix = "$"), xaxis = list(title = "Day",
range = c(0, 90), zeroline = F, showgrid = F), margin = list(t = 120))
fig <- fig %>%
animation_opts(frame = 100, transition = 0, redraw = FALSE)
fig <- fig %>%
animation_slider(currentvalue = list(prefix = "Day "))
fig
library(plotly)
library(magrittr)
library(tidyquant)
INTC <- tq_get("INTC")
INTC <- tail(INTC, 90)
INTC$ID <- seq.int(nrow(INTC))
INTC %<>%
mutate(close = round(close, digits = 2))
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
INTC <- INTC %>%
accumulate_by(~ID)
fig <- INTC %>%
plot_ly(x = ~ID, y = ~close, frame = ~frame, type = "scatter", mode = "lines",
fill = "tozeroy", fillcolor = "rgba(73, 26, 201, 0.5)", line = list(color = "rgb(73, 26, 201)"),
text = ~paste("Date: ", date, "<br>Close: $", close), hoverinfo = "text")
fig <- fig %>%
layout(title = "Intel Stock Closing Price: Last 90 Days", yaxis = list(title = "Close",
range = c(0, 50), zeroline = F, tickprefix = "$"), xaxis = list(title = "Day",
range = c(0, 90), zeroline = F, showgrid = F), margin = list(t = 120))
fig <- fig %>%
animation_opts(frame = 100, transition = 0, redraw = FALSE)
fig <- fig %>%
animation_slider(currentvalue = list(prefix = "Day "))
fig
knitr::opts_chunk$set(echo = TRUE)
# add your libraries
library(tidyverse)
library(caret)
library(rpart)
wine = read_rds("C:\\data\\pinot.rds")
# create some cool features. Make sure you add comments so I know what you are trying to accomplish!
wine_words <- function(df, j = 450, stem=F){
library(tidytext)
library(SnowballC)
data(stop_words)
words <- df %>%
unnest_tokens(word, description) %>%
anti_join(stop_words) %>% # get rid of stop words
filter(!(word %in% c("wine","pinot","vineyard","ber", "flav")))
if(stem){
words <- words %>%
mutate(word = wordStem(word))
}
words <- words %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = (n>0)) %>%
ungroup %>%
group_by(word) %>%
mutate(total = sum(n)) %>%
filter(total > j) %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = list(exists=0)) %>%
right_join(select(df,id,province)) %>%
select(-id) %>%
mutate(across(-province, ~replace_na(.x, F)))
}
wino <- wine_words(wine, j=450, stem=T)
wino %>% head(10) %>% select(1:5,province)
# specify the model to be used (i.e. KNN or Naive Bayes) and the tuning parameters used
ctrl <- trainControl(method = "cv", number = 5)
set.seed(504)
wine_index <- createDataPartition(wino$province, p = 0.80, list = FALSE)
train <- wino[ wine_index, ]
test <- wino[-wine_index, ]
fit <- train(province ~ .,
data = train,
method = "rf",
trControl = ctrl,
metric = "Kappa")
confusionMatrix(predict(fit, test),factor(test$province))
# Here are a few lines to inspect your best model. Add some comments about optimal hyperparameters.
print(fit)
print(fit$bestTune)
# the "method" below should match the one you chose above.
set.seed(1504) # I will choose a different seed for evaluation
wine_index <- createDataPartition(wino$province, p = 0.80, list = FALSE)
train <- wino[ wine_index, ]
test <- wino[-wine_index, ]
# example spec for knn
fit_final <- train(province ~ .,
data = train,
method = "rf",
tuneGrid=fit$bestTune)
# The last line means we will fit a model using the best tune parameters your CV found above.
confusionMatrix(predict(fit_final, test),factor(test$province))
